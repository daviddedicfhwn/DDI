//Load the people data:

LOAD CSV WITH HEADERS FROM 'https://data.neo4j.com/intro/movies/people.csv'  AS row
CREATE (p:Person)
SET p.name = row.name, p.born = toInteger(row.born);

//Load the movie data:
LOAD CSV WITH HEADERS FROM 'https://data.neo4j.com/intro/movies/movies.csv'  AS row
CREATE (m:Film)
SET m.title = row.title, m.released = toInteger(row.released), m.tagline = row.tagline;

//Create the index on Movie title:
CREATE CONSTRAINT UniqueFilmTitleConstraint FOR (m:Film) REQUIRE m.title IS UNIQUE;

//Create the index on Person name:
CREATE CONSTRAINT UniquePersonNameConstraint FOR (p:Person) REQUIRE p.name IS UNIQUE;

//Load the directors:
LOAD CSV WITH HEADERS FROM 'https://data.neo4j.com/intro/movies/directors.csv' AS row
MATCH (m:Film {title: row.film})
MERGE (p:Person {name: row.person})
WITH m,p
MERGE (p)-[:DIRECTED]->(m);


//Load the acted in relationships:
LOAD CSV WITH HEADERS FROM 'https://data.neo4j.com/intro/movies/actors.csv'  as row
MATCH (p:Person) where p.name = row.person
MATCH (m:Film) where m.title = row.film
WITH row, p, m
MERGE (p)-[r:ACTED_IN]->(m)
SET r.roles = split(coalesce(row.roles,""),";");
